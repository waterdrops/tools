#!/bin/sh
## This is a script for new installing CentOS 6.x system
## Author: HenryCao
## Date:2013-11-07
## Version 1.0

source /etc/profile

#Set Variables
CRONPATH="/var/spool/cron"
CRONROOT="$CRONPATH/root"
NTPSERVER="10.0.3.101"
GETENFORCE=`getenforce`
HTTPPROXY="http://10.0.3.101:8081"
CHECKSWAP=`cat /proc/swaps | wc -l`
NGINXPREFIX="/opt/nginx"
NGINXVERSION="1.4.3"
PHPVERSION="5.4.21"
PHPPREFIX="/opt/php"
PHPEXTENSIONDIR="$PHPPREFIX/lib/php/extensions/no-debug-non-zts-20100525"
DOWNLOADDIR="/data/popcapinstall"
REDISVERSION="2.6.16"
REDISPREFIX="/opt/redis"
ZABBIXPREFIX="/opt/zabbix"
ZABBIXVERSION="2.0.9"
POPCAPINSTALL="http://10.0.3.101:8080/popcapinstall"
HOSTNAME="cloud08"

Usage(){
    echo "prestage Version 1.0"
    echo "Author: HenryCao"
    echo ""
    echo "Usage: prestage [-h] [-s servertype]"
    echo "options:"
    echo "-s servertype         set server type as web|mysql|redis"
    echo "-h                    print this help"
}

Cronjob(){
#remove cronjob of ntp && nginx_sperate_requests
    mkdir -p $CRONPATH
    sed -i -e '/ntpdate/d;/nginx_sperate_requests/d;/script for zabbix trapper/d' $CRONROOT
    if [ $SERVER = 'WEB' ]
        then
        cat >> $CRONROOT << EOF
0 2 * * * /usr/sbin/ntpdate $NTPSERVER
##script for zabbix trapper
*/5 * * * * /opt/zabbix/script/nginx_sperate_requests
EOF
    else
        cat >> $CRONROOT << EOF
0 2 * * * /usr/sbin/ntpdate $NTPSERVER
EOF
    fi
    chmod 600 $CRONROOT
}

Logrotate(){
    if [ $SERVER = 'WEB' ]
        then
        cat >> /etc/logrotate.conf << EOF
/data/log/nginx/*access.log {
    compress
    create 0644  nginx nginx
    weekly
    rotate 4
    postrotate
        /opt/nginx/sbin/nginx -s reload
    endscript
}
EOF
    fi
}

Common(){
    echo "configuration system including selinux, ulimit, kernel, upgrade, ssh-keys, timezone, swap, iptables"
    sleep 3
#disable selinux
    if [ $GETENFORCE = 'Enforcing' ]
        then
        sed -i 's/SELINUX=enforcing/SELINUX=disabled/g' /etc/selinux/config
    fi
#open file limits
    echo "ulimit -n 65535 " >> /etc/profile
    source /etc/profile
#upgrade system
    export http_proxy="$HTTPPROXY"
    yum -y groupinstall Base "Development tools" && yum -y update
#kernel config
    cat >> /etc/sysctl.conf << EOF
vm.swappiness = 0
net.ipv4.tcp_tw_reuse = 1
net.ipv4.tcp_tw_recycle = 1
net.ipv4.tcp_syncookies = 1
net.ipv4.tcp_synack_retries = 2
net.ipv4.tcp_syn_retries = 2
net.ipv4.tcp_fin_timeout = 30
EOF
    sysctl -p
#put ssh keys
    mkdir -p /root/.ssh
    cat > /root/.ssh/authorized_keys << EOF
$keys
EOF
#set timezone
    cat > /etc/sysconfig/clock << EOF
ZONE="Asia/Shanghai"
UTC=fals
ARC=false
EOF
    cp -f /usr/share/zoneinfo/Asia/Shanghai /etc/localtime
#shutdown iptables
    iptables -F
    service iptables stop
    chkconfig iptables off
#check swap
    if [ $CHECKSWAP -eq 1 ]
        then
        echo "no swap here"
        echo "installing swap ..."
        dd if=/dev/zero of=/data/swap bs=1024 count=4096000
        mkswap /data/swap
        swapon /data/swap
        echo "/data/swap swap swap defaults 0 1" >> /etc/fstab
    fi
    sleep 5
#hostname
    echo "Hostname = $HOSTNAME"
    sed -i "s/HOSTNAME\=localhost.localdomain/HOSTNAME\=$HOSTNAME/g" /etc/sysconfig/network
}

Directory(){
    echo "making directories ..."
    if [ $SERVER = 'WEB' ]
        then
        mkdir -p $DOWNLOADDIR /data/deployment /opt/scripts /data/scripts /data/log/nginx /data/log/php /data/log/zabbix
        groupadd nginx
        useradd -g nginx nginx
        groupadd zabbix
        useradd -g zabbix zabbix
        chown -R zabbix:zabbix /data/log/zabbix/
        chown -R nginx:nginx /data/log/nginx/
    else
        mkdir -p $DOWNLOADDIR /data/deployment /opt/scripts /data/scripts /data/log/zabbix
        groupadd zabbix
        useradd -g zabbix zabbix
        chown -R zabbix:zabbix /data/log/zabbix/
    fi
    sleep 5
}

INSTALL_NGINX(){
    echo "installing nginx version $NGINXVERSION..."
    sleep 3
    yum -y install pcre-devel openssl-devel
    cd $DOWNLOADDIR
    wget http://nginx.org/download/nginx-$NGINXVERSION.tar.gz
    tar zxf nginx-$NGINXVERSION.tar.gz
    cd $DOWNLOADDIR/nginx-$NGINXVERSION
    ./configure  --prefix\=$NGINXPREFIX --with-http_realip_module --with-http_sub_module --with-http_gzip_static_module --with-http_stub_status_module --with-http_ssl_module --without-http_ssi_module --without-http_userid_module --without-http_geo_module --without-http_memcached_module --without-http_map_module --without-mail_pop3_module --without-mail_imap_module --without-mail_smtp_module
    make
    make install
    ln -s $NGINXPREFIX/sbin/nginx /usr/local/bin
    cat >> /etc/rc.local << EOF
$NGINXPREFIX/sbin/nginx -s stop
$NGINXPREFIX/sbin/nginx
EOF
    mkdir -p $NGINXPREFIX/conf/vhost
    cd $DOWNLOADDIR
#    git clone https://github.com/henrycao/nginxinstallbackup.git
    wget $POPCAPINSTALL/nginxinstallbackup/nginx.conf
    wget $POPCAPINSTALL/nginxinstallbackup/www.domain.com.conf
#    scp -r 10.0.3.101:$DOWNLOADDIR/nginxinstallbackup $DOWNLOADDIR/
    cp -f $DOWNLOADDIR/nginxinstallbackup/nginx.conf $NGINXPREFIX/conf/nginx.conf
    cp -f $DOWNLOADDIR/nginxinstallbackup/www.domian.com.conf $NGINXPREFIX/conf/vhost/
    echo "nginx prefix = $NGINXPREFIX"
    echo "nginx configfile = $NGINXPREFIX/conf/nginx.conf"
    echo "nginx = $NGINXPREFIX/sbin/nginx"
    nginx -V
    sleep 5
}

INSTALL_PHP(){
    echo "installing php version $PHPVERSION..."
    cd $DOWNLOADDIR
#    git clone https://github.com/henrycao/somerpms.git
    wget $POPCAPINSTALL/somerpms/libmcrypt-2.5.8-9.el6.x86_64.rpm
    wget $POPCAPINSTALL/somerpms/libmcrypt-devel-2.5.8-9.el6.x86_64.rpm
#    scp -r 10.0.3.101:$DOWNLOADDIR/somerpms $DOWNLOADDIR/
    rpm -ivh $DOWNLOADDIR/somerpms/libmcrypt*
    yum install -y libxml2-devel bzip2-devel freetype-devel libmemcached-devel mysql-devel libcurl-devel
    wget http://us1.php.net/get/php-$PHPVERSION.tar.bz2/from/cn2.php.net/mirror
    tar jxf php-$PHPVERSION.tar.bz2
    cd $DOWNLOADDIR/php-$PHPVERSION
    ./configure --prefix\=$PHPPREFIX --enable-fpm --enable-zip --with-bz2 --with-freetype-dir --with-libxml-dir --with-zlib --with-mysql --with-curl
    make
    make install
    ln -s /opt/php/bin/php* /usr/local/bin/
    cp php.ini-production $PHPPREFIX/lib/php.ini
    cd $DOWNLOADDIR
#    git clone https://github.com/henrycao/phpinstallbackup.git
    wget $POPCAPINSTALL/phpinstallbackup/php-fpm.conf
    wget $POPCAPINSTALL/phpinstallbackup/php-fpm
#    scp -r 10.0.3.101:$DOWNLOADDIR/phpinstallbackup $DOWNLOADDIR/
    cp $DOWNLOADDIR/phpinstallbackup/php-fpm $PHPPREFIX/
    ln -s $PHPPREFIX/php-fpm /etc/init.d/
    cp $DOWNLOADDIR/phpinstallbackup/php-fpm.conf $PHPPREFIX/etc/
    cat >> /etc/rc.local << EOF
/etc/init.d/php-fpm stop
/etc/init.d/php-fpm start
EOF
    sleep 5
}

INSTALL_PHPMODULE(){
    echo "installing php module now, including apc, phpredis, mcrypt..."
    echo 'extension_dir = "/opt/php/lib/php/extensions/no-debug-non-zts-20100525"' >> $PHPPREFIX/lib/php.ini
#installing apc
    cd $DOWNLOADDIR
    wget http://pecl.php.net/get/APC-3.1.13.tgz
    tar zxf APC-3.1.13.tgz
    cd $DOWNLOADDIR/APC-3.1.13
    phpize
    ./configure --with-php-config\=/opt/php/bin/php-config
    make
    make install
    echo "extension=apc.so" >> $PHPPREFIX/lib/php.ini
    cat >> $PHPPREFIX/lib/php.ini << EOF
[apc]
apc.enabled = on
apc.cache_by_default = On
apc.ttl=7200
apc.user_ttl=7200
apc.num_files_hint=0
apc.optimization = 1
apc.shm_size=512
apc.stat = On
apc.num_files_hint=0
apc.shm_size = 128M
EOF
#installing phpredis
    cd $DOWNLOADDIR
#    git clone https://github.com/nicolasff/phpredis.git
    wget $POPCAPINSTALL/phpredis.tar.gz
    tar zxf phpredis.tar.gz
#    scp -r 10.0.3.101:$DOWNLOADDIR/phpredis $DOWNLOADDIR/
    cd $DOWNLOADDIR/phpredis
    phpize
    ./configure --with-php-config\=/opt/php/bin/php-config
    make
    make install
    echo "extension=redis.so" >> $PHPPREFIX/lib/php.ini
#installing mcrypt
    cd $DOWNLOADDIR/php-$PHPVERSION/ext/mcrypt
    phpize
    ./configure --with-php-config\=/opt/php/bin/php-config
    make
    make install
    echo "extension=mcrypt.so" >> $PHPPREFIX/lib/php.ini
    sleep 5
}

INSTALL_REDIS(){
    echo "installing redis version $REDISVERSION now..."
    cd $DOWNLOADDIR
    wget http://download.redis.io/releases/redis-$REDISVERSION.tar.gz
    tar zxf redis-$REDISVERSION.tar.gz
    cd $DOWNLOADDIR/redis-$REDISVERSION
    make PREFIX\=$REDISPREFIX install
    ln -s $REDISPREFIX/bin/redis* /usr/local/bin
    cd $DOWNLOADDIR
#    git clone https://github.com/henrycao/Redis_Control_Scripts.git
    wget $POPCAPINSTALL/Redis_Control_Scripts.tar.gz
    tar zxf Redis_Control_Scripts.tar.gz
#    scp -r 10.0.3.101:$DOWNLOADDIR/Redis_Control_Scripts $DOWNLOADDIR/
    cp -r -f $DOWNLOADDIR/Redis_Control_Scripts/etc $REDISPREFIX/
    cp -r -f $DOWNLOADDIR/Redis_Control_Scripts/scrpits $REDISPREFIX/
    sleep 5
}

INSTALL_ZABBIX(){
    echo "installing zabbix version $ZABBIXVERSION now..."
    cd $DOWNLOADDIR
    wget http://sourceforge.net/projects/zabbix/files/ZABBIX%20Latest%20Stable/$ZABBIXVERSION/zabbix-$ZABBIXVERSION.tar.gz/download
    tar zxf zabbix-$ZABBIXVERSION.tar.gz
    cd $DOWNLOADDIR/zabbix-$ZABBIXVERSION
    ./configure --prefix\=$ZABBIXPREFIX --enable-agent --with-mysql --with-net-snmp --with-libcurl
    make
    make install
    cd $DOWNLOADDIR
#    git clone https://github.com/henrycao/zabbix-monitoring-scripts.git
#    scp -r 10.0.3.101:$DOWNLOADDIR/zabbix-monitoring-scripts $DOWNLOADDIR/
    wget $POPCAPINSTALL/zabbix-monitoring-scripts.tar.gz
    tar zxf zabbix-monitoring-scripts.tar.gz
    cp -r $DOWNLOADDIR/zabbix-monitoring-scripts/etc/* $ZABBIXPREFIX/etc/zabbix_agentd.conf.d/
    cp -r $DOWNLOADDIR/zabbix-monitoring-scripts/scripts $ZABBIXPREFIX/
    ln -s $ZABBIXPREFIX/scripts/zabbix_agentd /etc/init.d/
    cat >> /etc/rc.local << EOF
/etc/init.d/zabbix_agentd stop
/etc/init.d/zabbix_agentd start
EOF
    sed -i -e 's/LogFile\=\/tmp\/zabbix_agentd.log/LogFile\=\/data\/log\/zabbix\/zabbix_agentd.log/g;s/Server\=127.0.0.1/Server\=10.0.3.101/g;s/ServerActive\=127.0.0.1/ServerActive\=10.0.3.101/g' $ZABBIXPREFIX/etc/zabbix_agentd.conf
    echo 'Include=/opt/zabbix/etc/zabbix_agentd.conf.d/' >> $ZABBIXPREFIX/etc/zabbix_agentd.conf
    sleep 5
}

Zabbix_Mysql(){
    mkdir -p /var/lib/zabbix
    cat > /var/lib/zabbix/.my.cnf << EOF
[client]
port            = 3306
socket          = /tmp/mysql.sock
default-character-set= utf8
user            = monitor
password        = monitor
EOF
}

#Set Options
while getopts "s:h" ARG
do
    case $ARG in
        s)
            case $OPTARG in
                web)
                    SERVER="WEB"
                    Common
                    Directory
                    Cronjob
                    INSTALL_NGINX
                    INSTALL_PHP
                    INSTALL_PHPMODULE
                    Logrotate
                    INSTALL_ZABBIX
                    ;;
                mysql)
                    SERVER="MYSQL"
                    Common
                    Directory
                    Cronjob
                    INSTALL_ZABBIX
                    Zabbix_Mysql
                    ;;
                redis)
                    SERVER="REDIS"
                    Common
                    Directory
                    Cronjob
                    INSTALL_REDIS
                    INSTALL_ZABBIX
                    ;;
                ?)
                    echo invalid argument
                    Usage
                    ;;
                esac
                ;;
        h)
            Usage
            ;;
        ?)
            echo invalid argument
            Usage
            ;;
    esac
done

if [ -z $1 ]
    then
    Usage
fi
